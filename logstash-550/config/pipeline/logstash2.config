input {
    jdbc {
        jdbc_driver_library => "${JDBC_DRIVER_LIBRARY}"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_connection_string => "${JDBC_MYSQL_STRING}"
        jdbc_user => "tripster"
        jdbc_password => "${JDBC_PASSWORD}"
        jdbc_page_size => 10000
        schedule => "* * * * *"
        use_column_value => true
        tracking_column_type => "timestamp"
        tracking_column => "updated"
        type => "contents"
        statement => "SELECT List.Contents_ID, List.Category_ID, Category_Value_kor, Contents_Title, Contents_Keyword, Contents_Location, Contents_Country, Contents_City,Contents_Rating,Contents_View_Cnt, Contents_Review_Cnt, Contents_Scrap_Cnt,Contents_Thumbnail, IFNULL(Contents_Contents,'') AS Contents_Contents, IFNULL(Contents_Time,'') AS Contents_Time, IFNULL(Contents_Tel,'') AS Contents_Tel, IFNULL(Contents_Lat,0) AS Contents_Lat, IFNULL(Contents_Long,0) AS Contents_Long, List.Created, List.Updated FROM (SELECT Contents_ID, tbl_Contents.Category_ID, Category_Value_kor, Contents_Title, Contents_Keyword, Contents_Location, Contents_Country, Contents_City,Contents_Rating,Contents_View_Cnt, Contents_Review_Cnt, Contents_Scrap_Cnt,Contents_Thumbnail, tbl_Contents.Created, tbl_Contents.Updated FROM tbl_Contents JOIN tbl_Category ON tbl_Contents.Category_ID = tbl_Category.Category_ID) AS List LEFT JOIN tbl_Contents_Detail ON List.Contents_ID = tbl_Contents_Detail.Contents_ID WHERE Contents_Country = 'KR'"
        last_run_metadata_path => "{contents_last_run_path}"
    }
    # jdbc {
    #     jdbc_driver_library => "${JDBC_DRIVER_LIBRARY}"
    #     jdbc_driver_class => "com.mysql.jdbc.Driver"
    #     jdbc_connection_string => "${JDBC_MYSQL_STRING}"
    #     jdbc_user => "tripster"
    #     jdbc_password => "${JDBC_PASSWORD}"
    #     jdbc_page_size => 100
    #     schedule => "* * * * *"
    #     use_column_value => true
    #     tracking_column_type => "timestamp"
    #     tracking_column => "updated"
    #     type => "member"
    #     statement => "SELECT Member_ID, Member_Name, Member_Email, Member_Sex, Member_Birthday, IFNULL(Member_Picture,'') AS Member_Picture, Created, Updated FROM tbl_Member "
    #     last_run_metadata_path => "{member_last_run_path}"
    # }
    # jdbc {
    #     jdbc_driver_library => "${JDBC_DRIVER_LIBRARY}"
    #     jdbc_driver_class => "com.mysql.jdbc.Driver"
    #     jdbc_connection_string => "${JDBC_MYSQL_STRING}"
    #     jdbc_user => "tripster"
    #     jdbc_password => "${JDBC_PASSWORD}"
    #     jdbc_page_size => 100
    #     jdbc_paging_enabled => true
    #     schedule => "* * * * *"
    #     use_column_value => true
    #     tracking_column_type => "timestamp"
    #     tracking_column => "updated"
    #     type => "plan"
    #     statement => "SELECT Plan_ID, tbl_Plan.Member_ID, Member_Name, IFNULL(Member_Picture,'') AS Member_Picture, Plan_Title, Plan_StartDate, Plan_EndDate, Plan_EndChk, Plan_Like_Cnt,tbl_Plan.Created, tbl_Plan.Updated FROM tbl_Plan JOIN tbl_Member ON tbl_Plan.Member_ID=tbl_Member.Member_ID"
    #     last_run_metadata_path => "{plan_last_run_path}"
    # }
    # jdbc {
    #     jdbc_driver_library => "${JDBC_DRIVER_LIBRARY}"
    #     jdbc_driver_class => "com.mysql.jdbc.Driver"
    #     jdbc_connection_string => "${JDBC_MYSQL_STRING}"
    #     jdbc_user => "tripster"
    #     jdbc_password => "${JDBC_PASSWORD}"
    #     jdbc_page_size => 100
    #     jdbc_paging_enabled => true
    #     schedule => "* * * * *"
    #     use_column_value => true
    #     tracking_column_type => "timestamp"
    #     tracking_column => "updated"
    #     type => "plan_detail"
    #     statement => "SELECT Plan_ID, Plan_Detail.Plan_Detail_ID, Contents_ID, Category_Value_kor, Contents_Title, Contents_Keyword, IFNULL(Memo_Contents,'') AS Memo_Contents, Plan_Detail_StartTime, Plan_Detail_EndTime, Plan_Detail_Date, Plan_Detail.Created, Plan_Detail.Updated FROM (SELECT Plan_ID, Plan_Detail_ID, tbl_Plan_Detail.Contents_ID, Category_Value_kor, Contents_Title, Contents_Keyword, IFNULL(Plan_Detail_StartTime,'') AS Plan_Detail_StartTime, IFNULL(Plan_Detail_EndTime,'') AS Plan_Detail_EndTime, IFNULL(Plan_Detail_Date,'') AS Plan_Detail_Date, tbl_Plan_Detail.Created, tbl_Plan_Detail.Updated FROM tbl_Plan_Detail JOIN tbl_Contents ON tbl_Plan_Detail.Contents_ID = tbl_Contents.Contents_ID) AS Plan_Detail LEFT JOIN tbl_Memo ON Plan_Detail.Plan_Detail_ID = tbl_Memo.Plan_Detail_ID WHERE Plan_Detail.Updated > :sql_last_value"
    #     last_run_metadata_path => "{plan_detail_last_run_path}"
    # }
}

filter {
    mutate {
        gsub => [ "contents_keyword","['\[\]]",""]
        strip => ["contents_keyword"]
        gsub => ["contents_keyword","_"," "]
        split => { "contents_keyword" => "," }
    }
}
output {
    # stdout { codec => "rubydebug" }
    if [type] == "contents" {
        elasticsearch {
            hosts => ["${ES_HOST}"]
            index => "contents"
            document_type => "%{type}"
            document_id => "%{contents_id}"
            template_name => "contents"
            template => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mapping/contents.json"
        }
        stdout { codec => "rubydebug" }
    }
    # if [type] == "member" {
    #     elasticsearch {
    #         hosts => ["${ES_HOST}"]
    #         index => "member"
    #         document_type => "%{type}"
    #         document_id => "%{member_id}"
    #         template_name => "member"
    #         template => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mapping/member.json"
    #     }
    # }
    # if [type] == "plan" {
    #     elasticsearch {
    #         hosts => ["${ES_HOST}"]
    #         index =>"plan"
    #         document_type => "%{type}"
    #         document_id => "%{plan_id}"
    #         template_name => "plan"
    #         template => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mapping/plan.json"
    #     }
    # }
}

