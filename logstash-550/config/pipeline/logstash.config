input {
    # jdbc {
    #     jdbc_driver_library => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/postgresql-42.1.4.jar"
    #     jdbc_driver_class => "org.postgresql.Driver"
    #     jdbc_connection_string => "${JDBC_POSTGRESQL_STRING}"
    #     jdbc_user => "tipster"
    #     jdbc_password => "${JDBC_PASSWORD}"
    #     jdbc_page_size => 1000
    #     schedule => "* * * * *"
    #     use_column_value => true
    #     tracking_column_type => "numeric"
    #     tracking_column => "contents_id"
    #     type => "contents"
    #     statement => "SELECT * FROM contents_result "
    #     last_run_metadata_path => "{last_run_path}"
    # }
    jdbc {
        jdbc_driver_library => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mysql-connector-java-5.1.45-bin.jar"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_connection_string =>  "${JDBC_MYSQL_STRING}"
        jdbc_user => "tripster"
        jdbc_password => "${JDBC_PASSWORD}"
        jdbc_page_size => 1000
        schedule => "* * * * *"
        use_column_value => true
        tracking_column_type => "numeric"
        tracking_column => "Contents_ID"
        type => "contents"
        statement => "SELECT tbl_Contents.Contents_ID, tbl_Contents.Category_ID, Category_Value_kor,Contents_Title, Contents_Keyword, Contents_Location, Contents_Country, Contents_City,Contents_Rating, Contents_View_Cnt, Contents_Review_Cnt, Contents_Scrap_Cnt,Contents_Thumbnail, tbl_Contents.Created, tbl_Contents.Updated FROM tbl_Contents JOIN tbl_Category ON tbl_Category.Category_ID = tbl_Contents.Category_ID WHERE Contents_ID > :sql_last_value || tbl_Contents.Updated < current_timestamp()"
        last_run_metadata_path => "{last_run_path}"
    }
    jdbc {
        jdbc_driver_library => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mysql-connector-java-5.1.45-bin.jar"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_connection_string =>  "${JDBC_MYSQL_STRING}"
        jdbc_user => "tripster"
        jdbc_password => "${JDBC_PASSWORD}"
        jdbc_page_size => 100
        schedule => "* * * * *"
        use_column_value => true
        tracking_column_type => "numeric"
        tracking_column => "Member_ID"
        type => "member"
        statement => "SELECT * FROM tbl_Member WHERE Member_ID > :sql_last_value ||  Updated < current_timestamp() "
        last_run_metadata_path => "{last_run_path}"
    }
    jdbc {
        jdbc_driver_library => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mysql-connector-java-5.1.45-bin.jar"
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_connection_string => "${JDBC_MYSQL_STRING}"
        jdbc_user => "tripster"
        jdbc_password => "${JDBC_PASSWORD}"
        jdbc_page_size => 5
        jdbc_paging_enabled => true
        schedule => "* * * * *"
        use_column_value => true
        tracking_column_type => "numeric"
        tracking_column => "Plan_ID"
        type => "plan"
        statement => " SELECT  Plan_ID, tbl_Plan.Member_ID, Member_Name, Plan_Title, Plan_StartDate, Plan_EndDate, Plan_EndChk, Plan_Like_Cnt, tbl_Plan.Created, tbl_Plan.Updated FROM tbl_Plan Join tbl_Member ON tbl_Plan.Member_ID=tbl_Member.Member_ID WHERE Plan_ID > :sql_last_value || tbl_Plan.Updated < current_timestamp() "
        last_run_metadata_path => "{last_run_path}"
    }
}

output {
    if [type] == "contents" {
        elasticsearch {
            hosts => ["localhost"]
            index => "test"
            document_type => "%{type}"
            document_id => "%{contents_id}"
            template => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mapping/contents.json"
            template_name => "contents-*"
            template_overwrite => true
        }
    }
    if [type] == "member" {
        elasticsearch {
            hosts => ["localhost"]
            index => "test"
            document_type => "%{type}"
            document_id => "%{member_id}"
            template => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mapping/member.json"
            template_name => "member-*"
        }
    }

    if [type] == "plan" {
        elasticsearch {
            hosts => ["localhost"]
            index => "test"
            document_type => "%{type}"
            document_id => "%{plan_id}"
            template => "/Users/choon/bitproject/ELK/logstash-550/config/pipeline/mapping/plan.json"
            template_name => "plan-*"
        }
    }
}

